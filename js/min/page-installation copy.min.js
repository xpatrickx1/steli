"use strict";$(document).ready(function(){function t(t){t.addClass("currentFaq"),t.find(".faq__description").slideDown(),t.find(".faq__question-icon").addClass("active"),t.find(".faq__title").addClass("active")}function i(t){t.removeClass("currentFaq"),t.find(".faq__description").slideUp(),t.find(".faq__question-icon").removeClass("active"),t.find(".faq__title").removeClass("active")}$(".faq__item").each(function(t){0!==t&&$(".faq__description").slideUp()}),$(".faq .faq__accordion").each(function(){var t=$(".faq__item",this).first();t.addClass("currentFaq"),t.find(".faq__description").slideDown(),t.find(".faq__question-icon").addClass("active"),t.find(".faq__title").addClass("active")}),$(".faq__item").on("click",function(a){var e=$(this).parent(".faq__accordion");if(e){if($(this).hasClass("currentFaq"))return void i($(this));e.children().each(function(){$(this).hasClass("currentFaq")&&i($(this))}),t($(this))}}),$(".inner__sidebar a").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")||location.hostname==this.hostname){var t=$(this.hash);t=t.length?t:$("[name="+this.hash.slice(1)+"]"),t.length&&$("html, body").animate({scrollTop:t.offset().top-175},1e3)}});var a,e=$(".inner__sidebar"),n=e.outerHeight()+1,s=e.find("a"),o=s.map(function(){var t=$($(this).attr("href"));if(t.length)return t});s.click(function(t){var i=$(this).attr("href"),a="#"===i?0:$(i).offset().top-n+1;$("html, body").stop().animate({scrollTop:a},850),t.preventDefault()}),$(window).scroll(function(){var t=$(this).scrollTop()+n,i=o.map(function(){if($(this).offset().top<t)return this});i=i[i.length-1];var e=i&&i.length?i[0].id:"";a!==e&&(a=e,s.parent().removeClass("active").end().filter('[href="#'+e+'"]').parent().addClass("active"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
