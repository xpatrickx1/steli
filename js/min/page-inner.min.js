"use strict";$(document).ready(function(){function e(){var e=n(l);i.textContent=e/100*70,a.textContent=e,r.textContent=e/100*120}function t(e){for(var t=0;t<l.length;t++)if(l[t].name===e)return l[t].value;return null}function n(e){return 1e3+50*t("square")+20*t("angles")+20*t("lightingPoints")+20*t("chandeliers")+20*t("pipes")}var a=(document.getElementById("parameters"),document.getElementById("resultPriceFrom")),r=document.getElementById("resultPriceTo"),i=document.getElementById("wrongPrice"),l=(document.getElementById("result-details"),[{name:"square",unit:"Ð¼2",value:17},{name:"angles",value:4},{name:"lightingPoints",value:0},{name:"chandeliers",value:0},{name:"pipes",value:0}]);!function(t){l.forEach(function(t){var n=document.getElementById(t.name).closest(".input-group");n.querySelector(".decrement").addEventListener("click",function(){t.value=Math.max(0,t.value-1),document.getElementById(t.name).value=t.value,e()}),n.querySelector(".increment").addEventListener("click",function(){t.value++,document.getElementById(t.name).value=t.value,e()})})}(),e(),$(".inner__sidebar a").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")||location.hostname==this.hostname){var e=$(this.hash);e=e.length?e:$("[name="+this.hash.slice(1)+"]"),e.length&&$("html, body").animate({scrollTop:e.offset().top-175},1e3)}});var o,u=$(".inner__sidebar"),c=u.outerHeight()+1,s=u.find("a"),m=s.map(function(){var e=$($(this).attr("href"));if(e.length)return e});s.click(function(e){var t=$(this).attr("href"),n="#"===t?0:$(t).offset().top-c+1;$("html, body").stop().animate({scrollTop:n},850),e.preventDefault()}),$(window).scroll(function(){var e=$(this).scrollTop()+c,t=m.map(function(){if($(this).offset().top<e)return this});t=t[t.length-1];var n=t&&t.length?t[0].id:"";o!==n&&(o=n,s.parent().removeClass("active").end().filter('[href="#'+n+'"]').parent().addClass("active"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UtaW5uZXIuanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJ1cGRhdGVSZXN1bHQiLCJ0b3RhbFByaWNlIiwiY2FsY3VsYXRlUHJpY2UiLCJwYXJhbWV0ZXJzIiwid3JvbmdQcmljZSIsInRleHRDb250ZW50IiwicmVzdWx0UHJpY2VGcm9tIiwicmVzdWx0UHJpY2VUbyIsImdldFZhbHVlQnlOYW1lIiwibmFtZSIsImkiLCJsZW5ndGgiLCJ2YWx1ZSIsImdldEVsZW1lbnRCeUlkIiwidW5pdCIsInBhcmFtZXRlciIsImZvckVhY2giLCJpdGVtR3JvdXAiLCJjbG9zZXN0IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJNYXRoIiwibWF4IiwiY2xpY2siLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwicmVwbGFjZSIsInRoaXMiLCJob3N0bmFtZSIsInRhcmdldCIsImhhc2giLCJzbGljZSIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJ0b3AiLCJsYXN0SWQiLCJ0b3BNZW51IiwidG9wTWVudUhlaWdodCIsIm91dGVySGVpZ2h0IiwibWVudUl0ZW1zIiwiZmluZCIsInNjcm9sbEl0ZW1zIiwibWFwIiwiaXRlbSIsImF0dHIiLCJlIiwiaHJlZiIsIm9mZnNldFRvcCIsInN0b3AiLCJwcmV2ZW50RGVmYXVsdCIsIndpbmRvdyIsInNjcm9sbCIsImZyb21Ub3AiLCJjdXIiLCJpZCIsInBhcmVudCIsInJlbW92ZUNsYXNzIiwiZW5kIiwiZmlsdGVyIiwiYWRkQ2xhc3MiXSwibWFwcGluZ3MiOiJZQUFBQSxHQUFFQyxVQUFVQyxNQUFNLFdBa0VkLFFBQVNDLEtBRUwsR0FBTUMsR0FBYUMsRUFBZUMsRUFFbENDLEdBQVdDLFlBQWNKLEVBQWEsSUFBTSxHQUU1Q0ssRUFBZ0JELFlBQWNKLEVBRTlCTSxFQUFjRixZQUFjSixFQUFhLElBQU0sSUFNbkQsUUFBU08sR0FBZUMsR0FFcEIsSUFBSyxHQUFJQyxHQUFJLEVB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IjpbIiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcclxuXHJcbiAgICBjb25zdCBwYXJhbWV0ZXJzQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhcmFtZXRlcnMnKTtcblxyXG4gICAgY29uc3QgcmVzdWx0UHJpY2VGcm9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdFByaWNlRnJvbScpO1xuXHJcbiAgICBjb25zdCByZXN1bHRQcmljZVRvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdFByaWNlVG8nKTtcblxyXG4gICAgY29uc3Qgd3JvbmdQcmljZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cm9uZ1ByaWNlJyk7XG5cclxuICAgIGNvbnN0IHJlc3VsdERldGFpbHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdWx0LWRldGFpbHMnKTtcblxyXG4gICAgXG5cclxuICAgIGNvbnN0IHBhcmFtZXRlcnMgPSBbXG5cclxuICAgICAgICB7IG5hbWU6ICdzcXVhcmUnLCB1bml0OiAn0LwyJywgdmFsdWU6IDE3IH0sXG5cclxuICAgICAgICB7IG5hbWU6ICdhbmdsZXMnLCB2YWx1ZTogNCB9LFxuXHJcbiAgICAgICAgeyBuYW1lOiAnbGlnaHRpbmdQb2ludHMnLCB2YWx1ZTogMCB9LFxuXHJcbiAgICAgICAgeyBuYW1lOiAnY2hhbmRlbGllcnMnLCB2YWx1ZTogMCB9LFxuXHJcbiAgICAgICAgeyBuYW1lOiAncGlwZXMnLCB2YWx1ZTogMCB9LFxuXHJcbiAgICBdO1xuXHJcbiAgICBcblxyXG4gICAgZnVuY3Rpb24gY3JlYXRlUGFyYW1ldGVyRWxlbWVudChwYXJhbWV0ZXIpIHtcblxyXG4gICAgICAgIHBhcmFtZXRlcnMuZm9yRWFjaCggKHBhcmFtZXRlcikgPT4ge1xuXHJcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Hcm91cCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBhcmFtZXRlci5uYW1lKS5jbG9zZXN0KCcuaW5wdXQtZ3JvdXAnKTtcblxyXG4gICAgXG5cclxuICAgICAgICAgICAgaXRlbUdyb3VwLnF1ZXJ5U2VsZWN0b3IoJy5kZWNyZW1lbnQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblxyXG4gICAgICAgICAgICAgICAgcGFyYW1ldGVyLnZhbHVlID0gTWF0aC5tYXgoMCwgcGFyYW1ldGVyLnZhbHVlIC0gMSk7XG5cclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBhcmFtZXRlci5uYW1lKS52YWx1ZSA9IHBhcmFtZXRlci52YWx1ZTtcblxyXG4gICAgICAgICAgICAgICAgdXBkYXRlUmVzdWx0KCk7XG5cclxuICAgICAgICAgICAgfSk7XG5cclxuICAgIFxuXHJcbiAgICAgICAgICAgIGl0ZW1Hcm91cC5xdWVyeVNlbGVjdG9yKCcuaW5jcmVtZW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cclxuICAgICAgICAgICAgICAgIHBhcmFtZXRlci52YWx1ZSsrO1xuXHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJhbWV0ZXIubmFtZSkudmFsdWUgPSBwYXJhbWV0ZXIudmFsdWU7XG5cclxuICAgICAgICAgICAgICAgIHVwZGF0ZVJlc3VsdCgpO1xuXHJcbiAgICAgICAgICAgIH0pO1xuXHJcbiAgICAgICAgfSk7XG5cclxuICAgIH1cblxyXG4gICAgXG5cclxuICAgIGZ1bmN0aW9uIHVwZGF0ZVJlc3VsdCgpIHtcblxyXG4gICAgICAgIGNvbnN0IHRvdGFsUHJpY2UgPSBjYWxjdWxhdGVQcmljZShwYXJhbWV0ZXJzKTtcblxyXG4gICAgICAgIHdyb25nUHJpY2UudGV4dENvbnRlbnQgPSB0b3RhbFByaWNlIC8gMTAwICogNzA7XG5cclxuICAgICAgICByZXN1bHRQcmljZUZyb20udGV4dENvbnRlbnQgPSB0b3RhbFByaWNlO1xuXHJcbiAgICAgICAgcmVzdWx0UHJpY2VUby50ZXh0Q29udGVudCA9IHRvdGFsUHJpY2UgLyAxMDAgKiAxMjA7XG5cclxuICAgIH1cblxyXG4gICAgXG5cclxuICAgIGZ1bmN0aW9uIGdldFZhbHVlQnlOYW1lKG5hbWUpIHtcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFyYW1ldGVycy5sZW5ndGg7IGkrKykge1xuXHJcbiAgICAgICAgICAgIGlmIChwYXJhbWV0ZXJzW2ldLm5hbWUgPT09IG5hbWUpIHtcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtZXRlcnNbaV0udmFsdWU7XG5cclxuICAgICAgICAgICAgfVxuXHJcbiAgICAgICAgfVxuXHJcbiAgICAgICAgcmV0dXJuIG51bGw7IFxuXHJcbiAgICB9XG5cclxuICAgIFxuXHJcbiAgICBmdW5jdGlvbiBjYWxjdWxhdGVQcmljZShwYXJhbWV0ZXJzKSB7XG5cclxuICAgICAgICBjb25zdCBiYXNlUHJpY2UgPSAxMDAwO1xuXHJcbiAgICAgICAgY29uc3QgYXJlYVByaWNlID0gZ2V0VmFsdWVCeU5hbWUoJ3NxdWFyZScpICogNTA7XG5cclxuICAgICAgICBjb25zdCBjb3JuZXJzUHJpY2UgPSBnZXRWYWx1ZUJ5TmFtZSgnYW5nbGVzJykgKiAyMDtcblxyXG4gICAgICAgIGNvbnN0IGxpZ2h0aW5nUG9pbnRzUHJpY2UgPSBnZXRWYWx1ZUJ5TmFtZSgnbGlnaHRpbmdQb2ludHMnKSAqIDIwO1xuXHJcbiAgICAgICAgY29uc3QgY2hhbmRlbGllcnNQcmljZSA9IGdldFZhbHVlQnlOYW1lKCdjaGFuZGVsaWVycycpICogMjA7XG5cclxuICAgICAgICBjb25zdCByb2RQcmljZSA9IGdldFZhbHVlQnlOYW1lKCdwaXBlcycpICogMjA7XG5cclxuICAgICAgICByZXR1cm4gYmFzZVByaWNlICsgYXJlYVByaWNlICsgY29ybmVyc1ByaWNlICsgbGlnaHRpbmdQb2ludHNQcmljZSArIGNoYW5kZWxpZXJzUHJpY2UgKyByb2RQcmljZTsgLy8g0J/QvtCy0LXRgNC90YPRgtC4INGA0L7Qt9GA0LDRhdC+0LLQsNC90YMg0YbRltC90YNcblxyXG4gICAgfVxuXHJcbiAgICBcblxyXG4gICAgY3JlYXRlUGFyYW1ldGVyRWxlbWVudCgpO1xuXHJcbiAgICBcblxyXG4gICAgdXBkYXRlUmVzdWx0KCk7XHJcbiAgICAkKCAnLmlubmVyX19zaWRlYmFyIGEnICkuY2xpY2soZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL15cXC8vLCAnJykgPT0gdGhpcy5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgJycpIHx8XHJcbiAgICAgICAgICBsb2NhdGlvbi5ob3N0bmFtZSA9PSB0aGlzLmhvc3RuYW1lKSB7XHJcbiAgICAgICAgICAgIGxldCB0YXJnZXQgPSAkKHRoaXMuaGFzaCk7XHJcbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5sZW5ndGggPyB0YXJnZXQgOiAkKCdbbmFtZT0nICsgdGhpcy5oYXNoLnNsaWNlKDEpICsgJ10nKTtcclxuICAgICAgICAgICAgaWYgKHRhcmdldC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6IHRhcmdldC5vZmZzZXQoKS50b3AgLSAxNzVcclxuICAgICAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGxldCBsYXN0SWQ7XHJcbiAgICBjb25zdCB0b3BNZW51ID0gJCgnLmlubmVyX19zaWRlYmFyJyk7XHJcbiAgICBjb25zdCB0b3BNZW51SGVpZ2h0ID0gdG9wTWVudS5vdXRlckhlaWdodCgpKzE7XHJcbiAgICBjb25zdCBtZW51SXRlbXMgPSB0b3BNZW51LmZpbmQoJ2EnKTtcclxuICAgIGNvbnN0IHNjcm9sbEl0ZW1zID0gbWVudUl0ZW1zLm1hcChmdW5jdGlvbigpe1xyXG4gICAgICAgIGNvbnN0IGl0ZW0gPSAkKCQodGhpcykuYXR0cignaHJlZicpKTtcclxuICAgICAgICBpZiAoaXRlbS5sZW5ndGgpIHsgcmV0dXJuIGl0ZW07IH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBtZW51SXRlbXMuY2xpY2soZnVuY3Rpb24oZSl7XHJcbiAgICAgICAgY29uc3QgaHJlZiA9ICQodGhpcykuYXR0cignaHJlZicpLFxyXG4gICAgICAgICAgICBvZmZzZXRUb3AgPSBocmVmID09PSAnIycgPyAwIDogJChocmVmKS5vZmZzZXQoKS50b3AtdG9wTWVudUhlaWdodCsxO1xyXG4gICAgICAgICQoJ2h0bWwsIGJvZHknKS5zdG9wKCkuYW5pbWF0ZSh7IFxyXG4gICAgICAgICAgICBzY3JvbGxUb3A6IG9mZnNldFRvcFxyXG4gICAgICAgIH0sIDg1MCk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zdCBmcm9tVG9wID0gJCh0aGlzKS5zY3JvbGxUb3AoKSt0b3BNZW51SGVpZ2h0O1xyXG4gICAgXHJcbiAgICAgICAgbGV0IGN1ciA9IHNjcm9sbEl0ZW1zLm1hcChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5vZmZzZXQoKS50b3AgPCBmcm9tVG9wKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY3VyID0gY3VyW2N1ci5sZW5ndGgtMV07XHJcbiAgICAgICAgY29uc3QgaWQgPSBjdXIgJiYgY3VyLmxlbmd0aCA/IGN1clswXS5pZCA6ICcnO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKGxhc3RJZCAhPT0gaWQpIHtcclxuICAgICAgICAgICAgbGFzdElkID0gaWQ7XHJcbiAgICAgICAgICAgIG1lbnVJdGVtc1xyXG4gICAgICAgICAgICAgICAgLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICAgICAgLmVuZCgpLmZpbHRlcignW2hyZWY9XCIjJytpZCsnXCJdJykucGFyZW50KCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH0gICAgICAgICAgICAgICAgICAgXHJcbiAgICB9KTtcclxuICAgIC8vPSBpbmNsdWRlIGNvbXBvbmVudHMvbW9kdWxlcy9vcmRlci5qc1xyXG5cclxuICAgXHJcbn0pOyJdfQ==
