"use strict";$(document).ready(function(){function e(){var e=n(l);i.textContent=e/100*70,a.textContent=e,r.textContent=e/100*120}function t(e){for(var t=0;t<l.length;t++)if(l[t].name===e)return l[t].value;return null}function n(e){return 1e3+50*t("square")+20*t("angles")+20*t("lightingPoints")+20*t("chandeliers")+20*t("pipes")}var a=(document.getElementById("parameters"),document.getElementById("resultPriceFrom")),r=document.getElementById("resultPriceTo"),i=document.getElementById("wrongPrice"),l=(document.getElementById("result-details"),[{name:"square",unit:"Ð¼2",value:17},{name:"angles",value:4},{name:"lightingPoints",value:0},{name:"chandeliers",value:0},{name:"pipes",value:0}]);!function(t){l.forEach(function(t){var n=document.getElementById(t.name).closest(".input-group");n.querySelector(".decrement").addEventListener("click",function(){t.value=Math.max(0,t.value-1),document.getElementById(t.name).value=t.value,e()}),n.querySelector(".increment").addEventListener("click",function(){t.value++,document.getElementById(t.name).value=t.value,e()})})}(),e(),$(".inner__sidebar a").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")||location.hostname==this.hostname){var e=$(this.hash);e=e.length?e:$("[name="+this.hash.slice(1)+"]"),e.length&&$("html, body").animate({scrollTop:e.offset().top-175},1e3)}});var o,u=$(".inner__sidebar"),c=u.outerHeight()+1,s=u.find("a"),m=s.map(function(){var e=$($(this).attr("href"));if(e.length)return e});s.click(function(e){var t=$(this).attr("href"),n="#"===t?0:$(t).offset().top-c+1;$("html, body").stop().animate({scrollTop:n},850),e.preventDefault()}),$(window).scroll(function(){var e=$(this).scrollTop()+c,t=m.map(function(){if($(this).offset().top<e)return this});t=t[t.length-1];var n=t&&t.length?t[0].id:"";o!==n&&(o=n,s.parent().removeClass("active").end().filter('[href="#'+n+'"]').parent().addClass("active"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2UtaW5uZXItMy5qcyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsInVwZGF0ZVJlc3VsdCIsInRvdGFsUHJpY2UiLCJjYWxjdWxhdGVQcmljZSIsInBhcmFtZXRlcnMiLCJ3cm9uZ1ByaWNlIiwidGV4dENvbnRlbnQiLCJyZXN1bHRQcmljZUZyb20iLCJyZXN1bHRQcmljZVRvIiwiZ2V0VmFsdWVCeU5hbWUiLCJuYW1lIiwiaSIsImxlbmd0aCIsInZhbHVlIiwiZ2V0RWxlbWVudEJ5SWQiLCJ1bml0IiwicGFyYW1ldGVyIiwiZm9yRWFjaCIsIml0ZW1Hcm91cCIsImNsb3Nlc3QiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk1hdGgiLCJtYXgiLCJjbGljayIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwidGhpcyIsImhvc3RuYW1lIiwidGFyZ2V0IiwiaGFzaCIsInNsaWNlIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsImxhc3RJZCIsInRvcE1lbnUiLCJ0b3BNZW51SGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJtZW51SXRlbXMiLCJmaW5kIiwic2Nyb2xsSXRlbXMiLCJtYXAiLCJpdGVtIiwiYXR0ciIsImUiLCJocmVmIiwib2Zmc2V0VG9wIiwic3RvcCIsInByZXZlbnREZWZhdWx0Iiwid2luZG93Iiwic2Nyb2xsIiwiZnJvbVRvcCIsImN1ciIsImlkIiwicGFyZW50IiwicmVtb3ZlQ2xhc3MiLCJlbmQiLCJmaWx0ZXIiLCJhZGRDbGFzcyJdLCJtYXBwaW5ncyI6IllBQUFBLEdBQUVDLFVBQVVDLE1BQU0sV0FrRWQsUUFBU0MsS0FFTCxHQUFNQyxHQUFhQyxFQUFlQyxFQUVsQ0MsR0FBV0MsWUFBY0osRUFBYSxJQUFNLEdBRTVDSyxFQUFnQkQsWUFBY0osRUFFOUJNLEVBQWNGLFlBQWNKLEVBQWEsSUFBTSxJQU1uRCxRQUFTTyxHQUFlQyxHQUVwQixJQUFLLEdBQUlDLEdBQUks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dGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XHJcblxyXG4gICAgY29uc3QgcGFyYW1ldGVyc0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwYXJhbWV0ZXJzJyk7XG5cclxuICAgIGNvbnN0IHJlc3VsdFByaWNlRnJvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRQcmljZUZyb20nKTtcblxyXG4gICAgY29uc3QgcmVzdWx0UHJpY2VUbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRQcmljZVRvJyk7XG5cclxuICAgIGNvbnN0IHdyb25nUHJpY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd3JvbmdQcmljZScpO1xuXHJcbiAgICBjb25zdCByZXN1bHREZXRhaWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3VsdC1kZXRhaWxzJyk7XG5cclxuICAgIFxuXHJcbiAgICBjb25zdCBwYXJhbWV0ZXJzID0gW1xuXHJcbiAgICAgICAgeyBuYW1lOiAnc3F1YXJlJywgdW5pdDogJ9C8MicsIHZhbHVlOiAxNyB9LFxuXHJcbiAgICAgICAgeyBuYW1lOiAnYW5nbGVzJywgdmFsdWU6IDQgfSxcblxyXG4gICAgICAgIHsgbmFtZTogJ2xpZ2h0aW5nUG9pbnRzJywgdmFsdWU6IDAgfSxcblxyXG4gICAgICAgIHsgbmFtZTogJ2NoYW5kZWxpZXJzJywgdmFsdWU6IDAgfSxcblxyXG4gICAgICAgIHsgbmFtZTogJ3BpcGVzJywgdmFsdWU6IDAgfSxcblxyXG4gICAgXTtcblxyXG4gICAgXG5cclxuICAgIGZ1bmN0aW9uIGNyZWF0ZVBhcmFtZXRlckVsZW1lbnQocGFyYW1ldGVyKSB7XG5cclxuICAgICAgICBwYXJhbWV0ZXJzLmZvckVhY2goIChwYXJhbWV0ZXIpID0+IHtcblxyXG4gICAgICAgICAgICBjb25zdCBpdGVtR3JvdXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJhbWV0ZXIubmFtZSkuY2xvc2VzdCgnLmlucHV0LWdyb3VwJyk7XG5cclxuICAgIFxuXHJcbiAgICAgICAgICAgIGl0ZW1Hcm91cC5xdWVyeVNlbGVjdG9yKCcuZGVjcmVtZW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG5cclxuICAgICAgICAgICAgICAgIHBhcmFtZXRlci52YWx1ZSA9IE1hdGgubWF4KDAsIHBhcmFtZXRlci52YWx1ZSAtIDEpO1xuXHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJhbWV0ZXIubmFtZSkudmFsdWUgPSBwYXJhbWV0ZXIudmFsdWU7XG5cclxuICAgICAgICAgICAgICAgIHVwZGF0ZVJlc3VsdCgpO1xuXHJcbiAgICAgICAgICAgIH0pO1xuXHJcbiAgICBcblxyXG4gICAgICAgICAgICBpdGVtR3JvdXAucXVlcnlTZWxlY3RvcignLmluY3JlbWVudCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHJcbiAgICAgICAgICAgICAgICBwYXJhbWV0ZXIudmFsdWUrKztcblxyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGFyYW1ldGVyLm5hbWUpLnZhbHVlID0gcGFyYW1ldGVyLnZhbHVlO1xuXHJcbiAgICAgICAgICAgICAgICB1cGRhdGVSZXN1bHQoKTtcblxyXG4gICAgICAgICAgICB9KTtcblxyXG4gICAgICAgIH0pO1xuXHJcbiAgICB9XG5cclxuICAgIFxuXHJcbiAgICBmdW5jdGlvbiB1cGRhdGVSZXN1bHQoKSB7XG5cclxuICAgICAgICBjb25zdCB0b3RhbFByaWNlID0gY2FsY3VsYXRlUHJpY2UocGFyYW1ldGVycyk7XG5cclxuICAgICAgICB3cm9uZ1ByaWNlLnRleHRDb250ZW50ID0gdG90YWxQcmljZSAvIDEwMCAqIDcwO1xuXHJcbiAgICAgICAgcmVzdWx0UHJpY2VGcm9tLnRleHRDb250ZW50ID0gdG90YWxQcmljZTtcblxyXG4gICAgICAgIHJlc3VsdFByaWNlVG8udGV4dENvbnRlbnQgPSB0b3RhbFByaWNlIC8gMTAwICogMTIwO1xuXHJcbiAgICB9XG5cclxuICAgIFxuXHJcbiAgICBmdW5jdGlvbiBnZXRWYWx1ZUJ5TmFtZShuYW1lKSB7XG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhcmFtZXRlcnMubGVuZ3RoOyBpKyspIHtcblxyXG4gICAgICAgICAgICBpZiAocGFyYW1ldGVyc1tpXS5uYW1lID09PSBuYW1lKSB7XG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJhbWV0ZXJzW2ldLnZhbHVlO1xuXHJcbiAgICAgICAgICAgIH1cblxyXG4gICAgICAgIH1cblxyXG4gICAgICAgIHJldHVybiBudWxsOyBcblxyXG4gICAgfVxuXHJcbiAgICBcblxyXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlUHJpY2UocGFyYW1ldGVycykge1xuXHJcbiAgICAgICAgY29uc3QgYmFzZVByaWNlID0gMTAwMDtcblxyXG4gICAgICAgIGNvbnN0IGFyZWFQcmljZSA9IGdldFZhbHVlQnlOYW1lKCdzcXVhcmUnKSAqIDUwO1xuXHJcbiAgICAgICAgY29uc3QgY29ybmVyc1ByaWNlID0gZ2V0VmFsdWVCeU5hbWUoJ2FuZ2xlcycpICogMjA7XG5cclxuICAgICAgICBjb25zdCBsaWdodGluZ1BvaW50c1ByaWNlID0gZ2V0VmFsdWVCeU5hbWUoJ2xpZ2h0aW5nUG9pbnRzJykgKiAyMDtcblxyXG4gICAgICAgIGNvbnN0IGNoYW5kZWxpZXJzUHJpY2UgPSBnZXRWYWx1ZUJ5TmFtZSgnY2hhbmRlbGllcnMnKSAqIDIwO1xuXHJcbiAgICAgICAgY29uc3Qgcm9kUHJpY2UgPSBnZXRWYWx1ZUJ5TmFtZSgncGlwZXMnKSAqIDIwO1xuXHJcbiAgICAgICAgcmV0dXJuIGJhc2VQcmljZSArIGFyZWFQcmljZSArIGNvcm5lcnNQcmljZSArIGxpZ2h0aW5nUG9pbnRzUHJpY2UgKyBjaGFuZGVsaWVyc1ByaWNlICsgcm9kUHJpY2U7IC8vINCf0L7QstC10YDQvdGD0YLQuCDRgNC+0LfRgNCw0YXQvtCy0LDQvdGDINGG0ZbQvdGDXG5cclxuICAgIH1cblxyXG4gICAgXG5cclxuICAgIGNyZWF0ZVBhcmFtZXRlckVsZW1lbnQoKTtcblxyXG4gICAgXG5cclxuICAgIHVwZGF0ZVJlc3VsdCgpO1xyXG4gICAgJCggJy5pbm5lcl9fc2lkZWJhciBhJyApLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgJycpID09IHRoaXMucGF0aG5hbWUucmVwbGFjZSgvXlxcLy8sICcnKSB8fFxyXG4gICAgICAgICAgbG9jYXRpb24uaG9zdG5hbWUgPT0gdGhpcy5ob3N0bmFtZSkge1xyXG4gICAgICAgICAgICBsZXQgdGFyZ2V0ID0gJCh0aGlzLmhhc2gpO1xyXG4gICAgICAgICAgICB0YXJnZXQgPSB0YXJnZXQubGVuZ3RoID8gdGFyZ2V0IDogJCgnW25hbWU9JyArIHRoaXMuaGFzaC5zbGljZSgxKSArICddJyk7XHJcbiAgICAgICAgICAgIGlmICh0YXJnZXQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiB0YXJnZXQub2Zmc2V0KCkudG9wIC0gMTc1XHJcbiAgICAgICAgICAgICAgICB9LCAxMDAwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBsZXQgbGFzdElkO1xyXG4gICAgY29uc3QgdG9wTWVudSA9ICQoJy5pbm5lcl9fc2lkZWJhcicpO1xyXG4gICAgY29uc3QgdG9wTWVudUhlaWdodCA9IHRvcE1lbnUub3V0ZXJIZWlnaHQoKSsxO1xyXG4gICAgY29uc3QgbWVudUl0ZW1zID0gdG9wTWVudS5maW5kKCdhJyk7XHJcbiAgICBjb25zdCBzY3JvbGxJdGVtcyA9IG1lbnVJdGVtcy5tYXAoZnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zdCBpdGVtID0gJCgkKHRoaXMpLmF0dHIoJ2hyZWYnKSk7XHJcbiAgICAgICAgaWYgKGl0ZW0ubGVuZ3RoKSB7IHJldHVybiBpdGVtOyB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgbWVudUl0ZW1zLmNsaWNrKGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgIGNvbnN0IGhyZWYgPSAkKHRoaXMpLmF0dHIoJ2hyZWYnKSxcclxuICAgICAgICAgICAgb2Zmc2V0VG9wID0gaHJlZiA9PT0gJyMnID8gMCA6ICQoaHJlZikub2Zmc2V0KCkudG9wLXRvcE1lbnVIZWlnaHQrMTtcclxuICAgICAgICAkKCdodG1sLCBib2R5Jykuc3RvcCgpLmFuaW1hdGUoeyBcclxuICAgICAgICAgICAgc2Nyb2xsVG9wOiBvZmZzZXRUb3BcclxuICAgICAgICB9LCA4NTApO1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgY29uc3QgZnJvbVRvcCA9ICQodGhpcykuc2Nyb2xsVG9wKCkrdG9wTWVudUhlaWdodDtcclxuICAgIFxyXG4gICAgICAgIGxldCBjdXIgPSBzY3JvbGxJdGVtcy5tYXAoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykub2Zmc2V0KCkudG9wIDwgZnJvbVRvcClcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGN1ciA9IGN1cltjdXIubGVuZ3RoLTFdO1xyXG4gICAgICAgIGNvbnN0IGlkID0gY3VyICYmIGN1ci5sZW5ndGggPyBjdXJbMF0uaWQgOiAnJztcclxuICAgIFxyXG4gICAgICAgIGlmIChsYXN0SWQgIT09IGlkKSB7XHJcbiAgICAgICAgICAgIGxhc3RJZCA9IGlkO1xyXG4gICAgICAgICAgICBtZW51SXRlbXNcclxuICAgICAgICAgICAgICAgIC5wYXJlbnQoKS5yZW1vdmVDbGFzcygnYWN0aXZlJylcclxuICAgICAgICAgICAgICAgIC5lbmQoKS5maWx0ZXIoJ1tocmVmPVwiIycraWQrJ1wiXScpLnBhcmVudCgpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICB9ICAgICAgICAgICAgICAgICAgIFxyXG4gICAgfSk7XHJcbiAgICAvLz0gaW5jbHVkZSBjb21wb25lbnRzL21vZHVsZXMvb3JkZXIuanNcclxuICAgXHJcbn0pOyJdfQ==
