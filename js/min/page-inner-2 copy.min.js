"use strict";$(document).ready(function(){function e(){var e=n(l);i.textContent=e/100*70,a.textContent=e,r.textContent=e/100*120}function t(e){for(var t=0;t<l.length;t++)if(l[t].name===e)return l[t].value;return null}function n(e){return 1e3+50*t("square")+20*t("angles")+20*t("lightingPoints")+20*t("chandeliers")+20*t("pipes")}var a=(document.getElementById("parameters"),document.getElementById("resultPriceFrom")),r=document.getElementById("resultPriceTo"),i=document.getElementById("wrongPrice"),l=(document.getElementById("result-details"),[{name:"square",unit:"Ð¼2",value:17},{name:"angles",value:4},{name:"lightingPoints",value:0},{name:"chandeliers",value:0},{name:"pipes",value:0}]);!function(t){l.forEach(function(t){var n=document.getElementById(t.name).closest(".input-group");n.querySelector(".decrement").addEventListener("click",function(){t.value=Math.max(0,t.value-1),document.getElementById(t.name).value=t.value,e()}),n.querySelector(".increment").addEventListener("click",function(){t.value++,document.getElementById(t.name).value=t.value,e()})})}(),e(),$(".inner__sidebar a").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")||location.hostname==this.hostname){var e=$(this.hash);e=e.length?e:$("[name="+this.hash.slice(1)+"]"),e.length&&$("html, body").animate({scrollTop:e.offset().top-175},1e3)}});var o,u=$(".inner__sidebar"),c=u.outerHeight()+1,s=u.find("a"),m=s.map(function(){var e=$($(this).attr("href"));if(e.length)return e});s.click(function(e){var t=$(this).attr("href"),n="#"===t?0:$(t).offset().top-c+1;$("html, body").stop().animate({scrollTop:n},850),e.preventDefault()}),$(window).scroll(function(){var e=$(this).scrollTop()+c,t=m.map(function(){if($(this).offset().top<e)return this});t=t[t.length-1];var n=t&&t.length?t[0].id:"";o!==n&&(o=n,s.parent().removeClass("active").end().filter('[href="#'+n+'"]').parent().addClass("active"))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
