"use strict";$(document).ready(function(){function e(e){e.addClass("currentFaq"),e.find(".faq__description").slideDown(),e.find(".faq__question-icon").addClass("active"),e.find(".faq__title").addClass("active")}function n(e){e.removeClass("currentFaq"),e.find(".faq__description").slideUp(),e.find(".faq__question-icon").removeClass("active"),e.find(".faq__title").removeClass("active")}function t(){var e=i(u);r.textContent=e/100*70,c.textContent=e,s.textContent=e/100*120}function a(e){for(var n=0;n<u.length;n++)if(u[n].name===e)return u[n].value;return null}function i(e){return 1e3+50*a("square")+20*a("angles")+20*a("lightingPoints")+20*a("chandeliers")+20*a("pipes")}$(".faq__item").each(function(e){0!==e&&$(".faq__description").slideUp()}),$(".faq .faq__accordion").each(function(){var e=$(".faq__item",this).first();e.addClass("currentFaq"),e.find(".faq__description").slideDown(),e.find(".faq__question-icon").addClass("active"),e.find(".faq__title").addClass("active")}),$(".faq__item").on("click",function(t){var a=$(this).parent(".faq__accordion");if(a){if($(this).hasClass("currentFaq"))return void n($(this));a.children().each(function(){$(this).hasClass("currentFaq")&&n($(this))}),e($(this))}});var c=(document.getElementById("parameters"),document.getElementById("resultPriceFrom")),s=document.getElementById("resultPriceTo"),r=document.getElementById("wrongPrice"),u=(document.getElementById("result-details"),[{name:"square",unit:"Ð¼2",value:17},{name:"angles",value:4},{name:"lightingPoints",value:0},{name:"chandeliers",value:0},{name:"pipes",value:0}]);!function(e){u.forEach(function(e){var n=document.getElementById(e.name).closest(".input-group");n.querySelector(".decrement").addEventListener("click",function(){e.value=Math.max(0,e.value-1),document.getElementById(e.name).value=e.value,t()}),n.querySelector(".increment").addEventListener("click",function(){e.value++,document.getElementById(e.name).value=e.value,t()})})}(),t()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
