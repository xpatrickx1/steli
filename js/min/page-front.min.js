"use strict";$(document).ready(function(){function e(e){"down"===e&&d<a.length-1?d++:"up"===e&&d>0&&d--,a.forEach(function(e){return e.classList.remove("active")}),r.forEach(function(e){return e.classList.remove("active")}),a[d].classList.add("active"),r[d].classList.add("active"),setTimeout(function(){v=!1},500)}function t(e){document.body.style.overflow=e?"hidden":"auto"}function n(){c.textContent=(d+1).toString().padStart(2,"0");var e=(d+1)/a.length*100;i.style.height=e+"%",d<a.length-1?l.textContent=(d+2).toString().padStart(2,"0"):l.textContent=c.textContent}function o(){var e=s.getBoundingClientRect();return e.top<=u&&e.bottom>=window.innerHeight/2}function t(e){e&&!w?(document.body.style.overflow="hidden",w=!0):!e&&w&&(document.body.style.overflow="auto",w=!1)}var r=document.querySelectorAll(".tab"),a=document.querySelectorAll(".content"),s=document.querySelector(".content__wrapper"),i=document.querySelector(".scroll__progress"),c=document.querySelector(".scroll__number--top"),l=document.querySelector(".scroll__number--bottom"),d=0,u=300,v=!1,f=0,w=!1;r.forEach(function(e,t){e.addEventListener("click",function(){r.forEach(function(e){return e.classList.remove("active")}),e.classList.add("active"),a.forEach(function(e){return e.classList.remove("active")}),a[t].classList.add("active"),d=t,n()})}),n(),window.addEventListener("wheel",function(r){v||o()&&(t(!0),r.deltaY>0?d<a.length-1?(e("down"),n()):(f+=r.deltaY)>=20&&t(!1):r.deltaY<0&&(d>0?(e("up"),f=0,n()):(f+=r.deltaY)<=-20&&t(!1)))},{passive:!1}),$(".build__slider").on("afterChange init",function(e,t,n){t.$slides.removeClass("prev-slide").removeClass("next-slide");for(var o=0;o<t.$slides.length;o++){var r=$(t.$slides[o]);if(r.hasClass("slick-current")){r.prev().addClass("prev-slide"),r.next().addClass("next-slide");break}}}).on("beforeChange",function(e,t){t.$slides.removeClass("prev-slide").removeClass("next-slide")}).slick({infinite:!0,speed:300,centerMode:!0,slidesToShow:1,slidesToScroll:1,dots:!0,arrows:!0,prevArrow:'<div class="arrow-wrap arrow-wrap--prev"><button class="slick-prev slick-arrow arrow--main" aria-label="Previous" type="button"></button></div>',nextArrow:'<div class="arrow-wrap arrow-wrap--next"><button class="slick-next slick-arrow arrow--main" aria-label="Next" type="button"></button></div>',responsive:[{breakpoint:2560,settings:{dots:!0,arrows:!0}},{breakpoint:768,settings:{dots:!0,arrows:!1}}]}).on("afterChange",function(e){$(window).scroll()}),[{zone:".arrow-wrap--next",btn:".arrow--main.slick-next"},{zone:".arrow-wrap--prev",btn:".arrow--main.slick-prev"}].forEach(function(e){var t=e.zone,n=e.btn,o=document.querySelector(t),r=document.querySelector(n);o&&r&&(o.addEventListener("mouseenter",function(){r.style.opacity="1"}),o.addEventListener("mousemove",function(e){var t=event,n=t.clientX,o=t.clientY;r.animate({left:"".concat(n-40,"px"),top:"".concat(o-60,"px")},{duration:1e3,fill:"forwards"})}),o.addEventListener("mouseleave",function(){r.style.opacity="0",r.style.transform="translate(0, 0)"}))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
